// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Прокошин_Кирилл_ЭФБО_07_23;

#nullable disable

namespace Прокошин_Кирилл_ЭФБО_07_23.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250225222732_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Прокошин_Кирилл_ЭФБО_07_23.Author", b =>
                {
                    b.Property<int>("authorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("authorid"));

                    b.Property<string>("author2ndname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("authorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("dob")
                        .HasColumnType("date");

                    b.HasKey("authorid");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Прокошин_Кирилл_ЭФБО_07_23.Book", b =>
                {
                    b.Property<int>("bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("bookid"));

                    b.Property<int>("ISBN")
                        .HasColumnType("integer");

                    b.Property<int>("amount")
                        .HasColumnType("integer");

                    b.Property<int>("authorid")
                        .HasColumnType("integer");

                    b.Property<int>("genreid")
                        .HasColumnType("integer");

                    b.Property<int>("publishyear")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("bookid");

                    b.HasIndex("authorid");

                    b.HasIndex("genreid");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Прокошин_Кирилл_ЭФБО_07_23.Genre", b =>
                {
                    b.Property<int>("genreid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("genreid"));

                    b.Property<string>("genredescr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("genrename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("genreid");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Прокошин_Кирилл_ЭФБО_07_23.Book", b =>
                {
                    b.HasOne("Прокошин_Кирилл_ЭФБО_07_23.Author", "author")
                        .WithMany()
                        .HasForeignKey("authorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Прокошин_Кирилл_ЭФБО_07_23.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");

                    b.Navigation("genre");
                });
#pragma warning restore 612, 618
        }
    }
}
